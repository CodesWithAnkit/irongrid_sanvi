name: CI Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sanvi-backend

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: sanvi_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './sanvi-backend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Type check
      run: npm run check-types
    
    - name: Security audit
      run: npm audit --production
    
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/sanvi_test
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-jwt-secret' }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY || 'test-encryption-key-32-chars-exactly!' }}
        CSRF_SECRET: ${{ secrets.CSRF_SECRET || 'test-csrf-secret-key-must-be-secure' }}
    
    - name: Build
      run: npm run build

  frontend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sanvi-frontend

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './sanvi-frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Type check
      run: npm run check-types || npm run tsc
    
    - name: Security audit
      run: npm audit --production
    
    - name: Run tests
      run: npm test
    
    - name: Build
      run: npm run build
